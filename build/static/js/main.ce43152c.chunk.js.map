{"version":3,"sources":["views/meat.js","routes.js","views/fruits.js","views/vegetables.js","components/Navbars/AdminNavbar.js","components/Footer/Footer.js","assets/img/reactlogo.png","components/Sidebar/Sidebar.js","assets/img/mama-mboga.jpg","layouts/Admin.js","index.js"],"names":["App","dashboardRoutes","path","name","component","nameRef","useRef","priceRef","quantityRef","useState","Data","data","setData","setName","price","setPrice","quantity","setQuantity","updateID","setUpdateID","updateName","setUpdateName","updatePrice","setUpdatePrice","updateQuantity","setUpdateQuantity","useEffect","current","value","saveJson","posts","axios","post","then","response","className","placeholder","onChange","e","target","ref","Button","variant","onClick","newPost","uuidv1","editedPost","filterPost","filter","OBJ","id","Container","fluid","Row","Col","md","Card","Header","Title","as","Body","Table","map","key","populatePost","filterOutPost","deletePost","layout","location","useLocation","Navbar","bg","expand","preventDefault","document","documentElement","classList","toggle","node","createElement","onclick","this","parentElement","removeChild","body","appendChild","Brand","href","i","routes","length","pathname","indexOf","getBrandText","Toggle","aria-controls","Collapse","Nav","navbar","Item","Link","data-toggle","Footer","Component","Sidebar","color","image","data-image","data-color","style","backgroundImage","prop","redirect","upgrade","routeName","to","activeClassName","icon","Admin","React","sidebarImage","hasImage","mainPanel","scrollTop","scrollingElement","window","innerWidth","element","getElementById","parentNode","AdminNavbar","render","props","ReactDOM","from"],"mappings":"m6BA6PeA,IClOAC,EAtBS,CACtB,CACEC,KAAM,UACNC,KAAM,SACNC,UCQJ,WAGE,IAAMC,EAAUC,mBACVC,EAAWD,mBACXE,EAAcF,mBALP,EAQWG,mBAASC,GARpB,mBAQNC,EARM,KAQAC,EARA,OAWWH,qBAXX,mBAWNN,EAXM,KAWAU,EAXA,OAYaJ,qBAZb,mBAYNK,EAZM,KAYCC,EAZD,OAamBN,qBAbnB,mBAaNO,EAbM,KAaIC,EAbJ,OAemBR,qBAfnB,mBAeNS,EAfM,KAeIC,EAfJ,OAgBuBV,qBAhBvB,mBAgBNW,EAhBM,KAgBMC,EAhBN,OAiByBZ,qBAjBzB,mBAiBNa,EAjBM,KAiBOC,EAjBP,OAkB+Bd,qBAlB/B,mBAkBNe,EAlBM,KAkBUC,EAlBV,KAsBbC,qBAAU,WAIRrB,EAAQsB,QAAQC,MAAQ,KACxBrB,EAASoB,QAAQC,MAAQ,KACzBpB,EAAYmB,QAAQC,MAAQ,OAE5B,CAACjB,IAMH,IA+EMkB,EAAW,SAACC,GAGhBC,IAAMC,KADM,8BACIF,GACfG,MAAK,SAAAC,QASR,OACE,sBAAKC,UAAU,MAAf,UAEE,gCACE,+CACA,uBAAOC,YAAY,OACjBC,SAAW,SAAAC,GAAC,OAAIzB,EAASyB,EAAEC,OAAOX,QAClCA,MAAQzB,GAAQ,GAChBqC,IAAMnC,IAER,uBACA,uBAAO+B,YAAY,gBACjBC,SAAW,SAAAC,GAAC,OAAIvB,EAAUuB,EAAEC,OAAOX,QACnCA,MAAQd,GAAS,GACjB0B,IAAMjC,IAER,uBACA,uBAAO6B,YAAY,WACjBC,SAAW,SAAAC,GAAC,OAAIrB,EAAaqB,EAAEC,OAAOX,QACtCA,MAAQZ,GAAY,GACpBwB,IAAMhC,IAER,uBAEA,cAACiC,EAAA,EAAD,CAAQC,QAAQ,UAASC,QApHf,WACd,GAAGxC,GAAQW,GAASE,EAAW,CAE7B,IAAI4B,EAAU,CACZ,GAAMC,cACN,KAAQ1C,EACR,MAASW,EACT,SAAWE,GAGTc,EAAK,sBAAOnB,GAAP,CAAaiC,IAEtBhC,EAAQkB,GAERjB,IACAE,IACAE,IAGAY,EAASC,KAiGP,0BAKAV,GAAcE,GAAeE,EAE3B,gCACE,6CACA,uBAAOY,YAAY,OACjBC,SAAW,SAAAC,GAAC,OAAIjB,EAAeiB,EAAEC,OAAOX,QACxCA,MAAQR,GAAc,KAExB,uBACA,uBAAOgB,YAAY,gBACjBC,SAAW,SAAAC,GAAC,OAAIf,EAAgBe,EAAEC,OAAOX,QACzCA,MAAQN,GAAe,KAEzB,uBAEA,uBAAOc,YAAY,WACjBC,SAAW,SAAAC,GAAC,OAAIb,EAAmBa,EAAEC,OAAOX,QAC5CA,MAAQJ,GAAkB,KAE5B,uBACA,cAACiB,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QA1FjB,WAEjB,IAAIG,EAAa,CACf,GAAM5B,EACN,KAAQE,EACR,MAASE,EACT,SAAWE,GAGTuB,EAAa,YAAIpC,GAAMqC,QAAO,SAAAC,GAAG,OAAEA,EAAIC,KAAKhC,KAE5CY,EAAK,sBAAOiB,GAAP,CAAmBD,IAE5BlC,EAAQkB,GAERX,IACAE,IACAE,IACAE,IAGAI,EAASC,IAqED,+BAEA,KAEN,qBAAKK,UAAU,QAAf,SAEA,cAACgB,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKC,GAAG,KAAR,SACE,eAACC,EAAA,EAAD,CAAMrB,UAAU,4BAAhB,UACE,cAACqB,EAAA,EAAKC,OAAN,UACE,cAACD,EAAA,EAAKE,MAAN,CAAYC,GAAG,KAAf,sBAGF,cAACH,EAAA,EAAKI,KAAN,CAAWzB,UAAU,yCAArB,SACE,eAAC0B,EAAA,EAAD,CAAO1B,UAAU,4BAAjB,UACE,gCACE,+BACE,oBAAIA,UAAU,WAAd,gBACA,oBAAIA,UAAU,WAAd,kBACA,oBAAIA,UAAU,WAAd,mBACA,oBAAIA,UAAU,WAAd,sBACA,oBAAIA,UAAU,WAAd,kBACA,oBAAIA,UAAU,WAAd,yBAKZxB,EAAOA,EAAKmD,KAAI,SAAAhC,GAChB,OACE,gCACQ,+BACE,6BAAKA,EAAMoB,KACX,6BAAKpB,EAAM3B,OACX,6BAAK2B,EAAMhB,QACX,6BAAKgB,EAAMd,WAGjB,mCAAK,cAACyB,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAAU,kBA1IlC,SAACoB,EAAK5D,EAAMW,EAAOE,GACtCG,EAAY4C,GACZ1C,EAAclB,GACdoB,EAAeT,GACbW,EAAkBT,GAsIuCgD,CAAalC,EAAMoB,GAAIpB,EAAM3B,KAAM2B,EAAMhB,MAAMgB,EAAMd,WAA/F,qBACL,mCAAK,cAACyB,EAAA,EAAD,CAAQC,QAAQ,SAAQC,QAAU,kBAxJlC,SAACoB,GAElB,IAAIE,EAAgB,YAAItD,GAAMqC,QAAO,SAAAC,GAAG,OAAEA,EAAIC,KAAKa,KAEnDnD,EAAQqD,GAGRpC,EAASoC,GAiJgDC,CAAWpC,EAAMoB,KAAzD,+BAOR,yBDtOTiB,OAAQ,UAER,CACAjE,KAAM,cACNC,KAAM,aACNC,UEEJ,WAGE,IAAMC,EAAUC,mBACVC,EAAWD,mBACXE,EAAcF,mBALP,EAQWG,mBAASC,GARpB,mBAQNC,EARM,KAQAC,EARA,OAWWH,qBAXX,mBAWNN,EAXM,KAWAU,EAXA,OAYaJ,qBAZb,mBAYNK,EAZM,KAYCC,EAZD,OAamBN,qBAbnB,mBAaNO,EAbM,KAaIC,EAbJ,OAemBR,qBAfnB,mBAeNS,EAfM,KAeIC,EAfJ,OAgBuBV,qBAhBvB,mBAgBNW,EAhBM,KAgBMC,EAhBN,OAiByBZ,qBAjBzB,mBAiBNa,EAjBM,KAiBOC,EAjBP,OAkB+Bd,qBAlB/B,mBAkBNe,EAlBM,KAkBUC,EAlBV,KAsBbC,qBAAU,WAIRrB,EAAQsB,QAAQC,MAAQ,KACxBrB,EAASoB,QAAQC,MAAQ,KACzBpB,EAAYmB,QAAQC,MAAQ,OAE5B,CAACjB,IAMH,IA+EMkB,EAAW,SAACC,GAGhBC,IAAMC,KADM,8BACIF,GACfG,MAAK,SAAAC,QASR,OACE,sBAAKC,UAAU,MAAf,UAEE,gCACE,mDACA,uBAAOC,YAAY,OACjBC,SAAW,SAAAC,GAAC,OAAIzB,EAASyB,EAAEC,OAAOX,QAClCA,MAAQzB,GAAQ,GAChBqC,IAAMnC,IAER,uBACA,uBAAO+B,YAAY,gBACjBC,SAAW,SAAAC,GAAC,OAAIvB,EAAUuB,EAAEC,OAAOX,QACnCA,MAAQd,GAAS,GACjB0B,IAAMjC,IAER,uBACA,uBAAO6B,YAAY,WACjBC,SAAW,SAAAC,GAAC,OAAIrB,EAAaqB,EAAEC,OAAOX,QACtCA,MAAQZ,GAAY,GACpBwB,IAAMhC,IAER,uBAEA,cAACiC,EAAA,EAAD,CAAQC,QAAQ,UAASC,QApHf,WACd,GAAGxC,GAAQW,GAASE,EAAW,CAE7B,IAAI4B,EAAU,CACZ,GAAMC,cACN,KAAQ1C,EACR,MAASW,EACT,SAAWE,GAGTc,EAAK,sBAAOnB,GAAP,CAAaiC,IAEtBhC,EAAQkB,GAERjB,IACAE,IACAE,IAGAY,EAASC,KAiGP,8BAKAV,GAAcE,GAAeE,EAE3B,gCACE,gDACA,uBAAOY,YAAY,OACjBC,SAAW,SAAAC,GAAC,OAAIjB,EAAeiB,EAAEC,OAAOX,QACxCA,MAAQR,GAAc,KAExB,uBACA,uBAAOgB,YAAY,gBACjBC,SAAW,SAAAC,GAAC,OAAIf,EAAgBe,EAAEC,OAAOX,QACzCA,MAAQN,GAAe,KAEzB,uBAEA,uBAAOc,YAAY,WACjBC,SAAW,SAAAC,GAAC,OAAIb,EAAmBa,EAAEC,OAAOX,QAC5CA,MAAQJ,GAAkB,KAE5B,uBACA,cAACiB,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QA1FjB,WAEjB,IAAIG,EAAa,CACf,GAAM5B,EACN,KAAQE,EACR,MAASE,EACT,SAAWE,GAGTuB,EAAa,YAAIpC,GAAMqC,QAAO,SAAAC,GAAG,OAAEA,EAAIC,KAAKhC,KAE5CY,EAAK,sBAAOiB,GAAP,CAAmBD,IAE5BlC,EAAQkB,GAERX,IACAE,IACAE,IACAE,IAGAI,EAASC,IAqED,+BAEA,KAEN,qBAAKK,UAAU,QAAf,SAEA,cAACgB,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKC,GAAG,KAAR,SACE,eAACC,EAAA,EAAD,CAAMrB,UAAU,4BAAhB,UACE,cAACqB,EAAA,EAAKC,OAAN,UACE,cAACD,EAAA,EAAKE,MAAN,CAAYC,GAAG,KAAf,yBAGF,cAACH,EAAA,EAAKI,KAAN,CAAWzB,UAAU,yCAArB,SACE,eAAC0B,EAAA,EAAD,CAAO1B,UAAU,4BAAjB,UACE,gCACE,+BACE,oBAAIA,UAAU,WAAd,gBACA,oBAAIA,UAAU,WAAd,kBACA,oBAAIA,UAAU,WAAd,mBACA,oBAAIA,UAAU,WAAd,sBACA,oBAAIA,UAAU,WAAd,kBACA,oBAAIA,UAAU,WAAd,yBAKZxB,EAAOA,EAAKmD,KAAI,SAAAhC,GAChB,OACE,gCACQ,+BACE,6BAAKA,EAAMoB,KACX,6BAAKpB,EAAM3B,OACX,6BAAK2B,EAAMhB,QACX,6BAAKgB,EAAMd,WAEjB,mCAAK,cAACyB,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAAU,kBAzIlC,SAACoB,EAAK5D,EAAMW,EAAOE,GACtCG,EAAY4C,GACZ1C,EAAclB,GACdoB,EAAeT,GACbW,EAAkBT,GAqIuCgD,CAAalC,EAAMoB,GAAIpB,EAAM3B,KAAM2B,EAAMhB,MAAMgB,EAAMd,WAA/F,qBACL,mCAAK,cAACyB,EAAA,EAAD,CAAQC,QAAQ,SAAQC,QAAU,kBAvJlC,SAACoB,GAElB,IAAIE,EAAgB,YAAItD,GAAMqC,QAAO,SAAAC,GAAG,OAAEA,EAAIC,KAAKa,KAEnDnD,EAAQqD,GAGRpC,EAASoC,GAgJgDC,CAAWpC,EAAMoB,KAAzD,+BAMR,yBF9NTiB,OAAQ,UAEV,CACEjE,KAAM,QACNC,KAAM,OACNC,UDJJ,WAGE,IAAMC,EAAUC,mBACVC,EAAWD,mBACXE,EAAcF,mBALP,EAQWG,mBAASC,GARpB,mBAQNC,EARM,KAQAC,EARA,OAWWH,qBAXX,mBAWNN,EAXM,KAWAU,EAXA,OAYaJ,qBAZb,mBAYNK,EAZM,KAYCC,EAZD,OAamBN,qBAbnB,mBAaNO,EAbM,KAaIC,EAbJ,OAemBR,qBAfnB,mBAeNS,EAfM,KAeIC,EAfJ,OAgBuBV,qBAhBvB,mBAgBNW,EAhBM,KAgBMC,EAhBN,OAiByBZ,qBAjBzB,mBAiBNa,EAjBM,KAiBOC,EAjBP,OAkB+Bd,qBAlB/B,mBAkBNe,EAlBM,KAkBUC,EAlBV,KAsBbC,qBAAU,WAIRrB,EAAQsB,QAAQC,MAAQ,KACxBrB,EAASoB,QAAQC,MAAQ,KACzBpB,EAAYmB,QAAQC,MAAQ,OAE5B,CAACjB,IAMH,IA+EMkB,EAAW,SAACC,GAGhBC,IAAMC,KADM,8BACIF,GACfG,MAAK,SAAAC,QASR,OACE,sBAAKC,UAAU,MAAf,UAEE,gCACE,8CACA,uBAAOC,YAAY,OACjBC,SAAW,SAAAC,GAAC,OAAIzB,EAASyB,EAAEC,OAAOX,QAClCA,MAAQzB,GAAQ,GAChBqC,IAAMnC,IAER,uBACA,uBAAO+B,YAAY,gBACjBC,SAAW,SAAAC,GAAC,OAAIvB,EAAUuB,EAAEC,OAAOX,QACnCA,MAAQd,GAAS,GACjB0B,IAAMjC,IAER,uBACA,uBAAO6B,YAAY,WACjBC,SAAW,SAAAC,GAAC,OAAIrB,EAAaqB,EAAEC,OAAOX,QACtCA,MAAQZ,GAAY,GACpBwB,IAAMhC,IAER,uBACA,cAACiC,EAAA,EAAD,CAAQC,QAAQ,UAASC,QAnHf,WACd,GAAGxC,GAAQW,GAASE,EAAW,CAE7B,IAAI4B,EAAU,CACZ,GAAMC,cACN,KAAQ1C,EACR,MAASW,EACT,SAAWE,GAGTc,EAAK,sBAAOnB,GAAP,CAAaiC,IAEtBhC,EAAQkB,GAERjB,IACAE,IACAE,IAGAY,EAASC,KAgGP,yBAKAV,GAAcE,GAAeE,EAE3B,gCACE,gDACA,uBAAOY,YAAY,OACjBC,SAAW,SAAAC,GAAC,OAAIjB,EAAeiB,EAAEC,OAAOX,QACxCA,MAAQR,GAAc,KAExB,uBACA,uBAAOgB,YAAY,gBACjBC,SAAW,SAAAC,GAAC,OAAIf,EAAgBe,EAAEC,OAAOX,QACzCA,MAAQN,GAAe,KAEzB,uBAEA,uBAAOc,YAAY,WACjBC,SAAW,SAAAC,GAAC,OAAIb,EAAmBa,EAAEC,OAAOX,QAC5CA,MAAQJ,GAAkB,KAE5B,uBACA,cAACiB,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAzFjB,WAEjB,IAAIG,EAAa,CACf,GAAM5B,EACN,KAAQE,EACR,MAASE,EACT,SAAWE,GAGTuB,EAAa,YAAIpC,GAAMqC,QAAO,SAAAC,GAAG,OAAEA,EAAIC,KAAKhC,KAE5CY,EAAK,sBAAOiB,GAAP,CAAmBD,IAE5BlC,EAAQkB,GAERX,IACAE,IACAE,IACAE,IAGAI,EAASC,IAoED,+BAEA,KAEN,qBAAKK,UAAU,QAAf,SAEA,cAACgB,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKC,GAAG,KAAR,SACE,eAACC,EAAA,EAAD,CAAMrB,UAAU,4BAAhB,UACE,cAACqB,EAAA,EAAKC,OAAN,UACE,cAACD,EAAA,EAAKE,MAAN,CAAYC,GAAG,KAAf,oBAGF,cAACH,EAAA,EAAKI,KAAN,CAAWzB,UAAU,yCAArB,SACE,eAAC0B,EAAA,EAAD,CAAO1B,UAAU,4BAAjB,UACE,gCACE,+BACE,oBAAIA,UAAU,WAAd,gBACA,oBAAIA,UAAU,WAAd,kBACA,oBAAIA,UAAU,WAAd,mBACA,oBAAIA,UAAU,WAAd,sBACA,oBAAIA,UAAU,WAAd,kBACA,oBAAIA,UAAU,WAAd,yBAKZxB,EAAOA,EAAKmD,KAAI,SAAAhC,GAChB,OACE,gCACQ,+BACE,6BAAKA,EAAMoB,KACX,6BAAKpB,EAAM3B,OACX,6BAAK2B,EAAMhB,QACX,6BAAKgB,EAAMd,WAEjB,mCAAK,cAACyB,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAAU,kBAxIlC,SAACoB,EAAK5D,EAAMW,EAAOE,GACtCG,EAAY4C,GACZ1C,EAAclB,GACdoB,EAAeT,GACbW,EAAkBT,GAoIuCgD,CAAalC,EAAMoB,GAAIpB,EAAM3B,KAAM2B,EAAMhB,MAAMgB,EAAMd,WAA/F,qBACL,mCAAK,cAACyB,EAAA,EAAD,CAAQC,QAAQ,SAAQC,QAAU,kBAtJlC,SAACoB,GAElB,IAAIE,EAAgB,YAAItD,GAAMqC,QAAO,SAAAC,GAAG,OAAEA,EAAIC,KAAKa,KAEnDnD,EAAQqD,GAGRpC,EAASoC,GA+IgDC,CAAWpC,EAAMoB,KAAzD,+BAQR,yBCzNTiB,OAAQ,WGkDGV,MAjEf,WACE,IAAMW,EAAWC,cAqBjB,OACE,cAACC,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,KAA1B,SACE,eAACrB,EAAA,EAAD,CAAWC,OAAK,EAAhB,UACE,sBAAKjB,UAAU,gEAAf,UACE,cAACM,EAAA,EAAD,CACEC,QAAQ,OACRP,UAAU,yFACVQ,QA3BkB,SAACL,GAC3BA,EAAEmC,iBACFC,SAASC,gBAAgBC,UAAUC,OAAO,YAC1C,IAAIC,EAAOJ,SAASK,cAAc,OAClCD,EAAK5B,GAAK,YACV4B,EAAKE,QAAU,WACbC,KAAKC,cAAcC,YAAYF,MAC/BP,SAASC,gBAAgBC,UAAUC,OAAO,aAE5CH,SAASU,KAAKC,YAAYP,IAepB,SAKE,mBAAG3C,UAAU,wBAEf,cAACmC,EAAA,EAAOgB,MAAR,CACEC,KAAK,QACL5C,QAAS,SAACL,GAAD,OAAOA,EAAEmC,kBAClBtC,UAAU,OAHZ,SAnBa,WACnB,IAAK,IAAIqD,EAAI,EAAGA,EAAIC,EAAOC,OAAQF,IACjC,IAAsE,IAAlEpB,EAASuB,SAASC,QAAQH,EAAOD,GAAGrB,OAASsB,EAAOD,GAAGtF,MACzD,OAAOuF,EAAOD,GAAGrF,KAGrB,MAAO,QAkBE0F,QAGL,eAACvB,EAAA,EAAOwB,OAAR,CAAeC,gBAAc,mBAAmB5D,UAAU,OAA1D,UACE,sBAAMA,UAAU,oCAChB,sBAAMA,UAAU,oCAChB,sBAAMA,UAAU,uCAElB,cAACmC,EAAA,EAAO0B,SAAR,CAAiB9C,GAAG,mBAApB,SACE,cAAC+C,EAAA,EAAD,CAAK9D,UAAU,cAAc+D,QAAM,EAAnC,SACE,cAACD,EAAA,EAAIE,KAAL,UACE,cAACF,EAAA,EAAIG,KAAL,CACEC,cAAY,WACZd,KAAK,SACL5C,QAAS,SAACL,GAAD,OAAOA,EAAEmC,kBAClBtC,UAAU,oB,gCC1CXmE,E,4JAbb,WACE,OACE,wBAAQnE,UAAU,sBAAlB,SACE,cAACgB,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACE,gC,GALWmD,aCJN,ICiEAC,MAzDf,YAA4C,IAAzBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,MAAOjB,EAAU,EAAVA,OACzBrB,EAAWC,cAIjB,OACE,sBAAKlC,UAAU,UAAUwE,aAAYD,EAAOE,aAAYH,EAAxD,UACE,qBACEtE,UAAU,qBACV0E,MAAO,CACLC,gBAAiB,OAASJ,EAAQ,OAGtC,sBAAKvE,UAAU,kBAAf,UACE,qBAAKA,UAAU,uDAAf,SACE,mBACEA,UAAU,6BADZ,SAGE,qBAAKA,UAAU,WAAf,SAEE,mBAAGA,UAAU,cAAb,oCAON,cAAC8D,EAAA,EAAD,UACGR,EAAO3B,KAAI,SAACiD,EAAMhD,GACjB,OAAKgD,EAAKC,SAoBH,KAlBH,oBACE7E,UACE4E,EAAKE,QACD,qBAhCDC,EAiCaH,EAAK5C,OAAS4C,EAAK7G,KAhC5CkE,EAASuB,SAASC,QAAQsB,IAAc,EAAI,SAAW,IA4BlD,SAQE,eAAC,IAAD,CACEC,GAAIJ,EAAK5C,OAAS4C,EAAK7G,KACvBiC,UAAU,WACViF,gBAAgB,SAHlB,UAKE,mBAAGjF,UAAW4E,EAAKM,OACnB,4BAAIN,EAAK5G,WARN4D,GAnCD,IAACmD,cCVR,MAA0B,uCC8D1BI,MAnDf,WAAkB,IAMG7B,EANJ,EACW8B,IAAM9G,SAAS+G,GAD1B,mBACRd,EADQ,aAEWa,IAAM9G,SAAS,UAF1B,mBAERgG,EAFQ,aAGiBc,IAAM9G,UAAS,IAHhC,mBAGRgH,EAHQ,KAITrD,GAJS,KAIEC,eACXqD,EAAYH,IAAMjH,OAAO,MA6B/B,OAbAiH,IAAM7F,WAAU,WAId,GAHAgD,SAASC,gBAAgBgD,UAAY,EACrCjD,SAASkD,iBAAiBD,UAAY,EACtCD,EAAU/F,QAAQgG,UAAY,EAE5BE,OAAOC,WAAa,MACwC,IAA5DpD,SAASC,gBAAgBxC,UAAUyD,QAAQ,YAC3C,CACAlB,SAASC,gBAAgBC,UAAUC,OAAO,YAC1C,IAAIkD,EAAUrD,SAASsD,eAAe,aACtCD,EAAQE,WAAW9C,YAAY4C,MAEhC,CAAC3D,IAEF,mCACE,sBAAKjC,UAAU,UAAf,UACE,cAAC,EAAD,CAASsE,MAAOA,EAAOC,MAAOe,EAAWf,EAAQ,GAAIjB,OAAQA,IAC7D,sBAAKtD,UAAU,aAAaK,IAAKkF,EAAjC,UACE,cAACQ,EAAD,IACA,qBAAK/F,UAAU,UAAf,SACE,cAAC,IAAD,WAnCSsD,EAmCUA,EAlCpBA,EAAO3B,KAAI,SAACiD,EAAMhD,GACvB,MAAoB,WAAhBgD,EAAK5C,OAEL,cAAC,IAAD,CACEjE,KAAM6G,EAAK5C,OAAS4C,EAAK7G,KACzBiI,OAAQ,SAACC,GAAD,OAAW,cAACrB,EAAK3G,UAAN,eAAoBgI,MAClCrE,GAIF,aA0BL,cAAC,EAAD,aC1CVsE,IAASF,OACP,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOjI,KAAK,SAASiI,OAAQ,SAACC,GAAD,OAAW,cAAC,EAAD,eAAiBA,OACzD,cAAC,IAAD,CAAUE,KAAK,IAAInB,GAAG,uBAG1BzC,SAASsD,eAAe,W","file":"static/js/main.ce43152c.chunk.js","sourcesContent":["\nimport React, { useState, useEffect, useRef } from 'react';\nimport Data from \"../data.json\";\nimport { v1 as uuidv1 } from 'uuid';\nimport axios from 'axios';\nimport {\n  Badge,\n  Button,\n  Card,\n  Navbar,\n  Nav,\n  Table,\n  Container,\n  Row,\n  Col,\n} from \"react-bootstrap\";\n\nfunction App() {\n\n  // Reference\n  const nameRef = useRef();\n  const priceRef = useRef();\n  const quantityRef = useRef();\n\n  // State \n  const [data, setData] = useState(Data);\n\n  // Temp State\n  const [name, setName] = useState();\n  const [price, setPrice] = useState();\n  const [quantity, setQuantity] = useState();\n\n  const [updateID, setUpdateID] = useState();\n  const [updateName, setUpdateName] = useState();\n  const [updatePrice, setUpdatePrice] = useState();\n  const [updateQuantity, setUpdateQuantity] = useState();\n\n  // Effect\n  //////////////////////////////////////////\n  useEffect(() => {\n    // console.log(data);\n    // setDate(Data)\n    // clear form fields\n    nameRef.current.value = null;\n    priceRef.current.value = null;\n    quantityRef.current.value = null;\n    \n  },[data]);\n  \n\n\n  // Add Post\n  //////////////////////////////////////////\n  const addPost = () => {\n    if(name && price && quantity ) {\n      // create new post object\n      let newPost = {\n        \"id\": uuidv1(),\n        \"name\": name,\n        \"price\": price,\n        \"quantity\":quantity\n      }\n      // merge new post with copy of old state\n      let posts = [...data, newPost];\n      // push new object to state\n      setData(posts);\n      // clear title and content from state\n      setName();\n      setPrice();\n      setQuantity();\n\n      // update write to json file\n      saveJson(posts);\n\n   }\n  }\n  \n\n\n  // Delete Post \n  //////////////////////////////////////////\n  const deletePost = (key) => {\n    // filter out post containing that id\n    let filterOutPost = [...data].filter(OBJ=>OBJ.id!==key);\n    // save the rest in state\n    setData(filterOutPost);\n\n    // update write to json file\n    saveJson(filterOutPost);\n\n  }\n\n  // Populate Post\n  ////////////////////////////////////////// \n  const populatePost = (key, name, price, quantity) => {\n    setUpdateID(key);\n    setUpdateName(name);\n    setUpdatePrice(price);\n      setUpdateQuantity(quantity);\n\n  }\n\n  // Update Post \n  //////////////////////////////////////////\n  const updatePost = () => {\n    // populate post info from temp state and prepare new object for changed post\n    let editedPost = {\n      \"id\": updateID,\n      \"name\": updateName,\n      \"price\": updatePrice,\n      \"quantity\":updateQuantity\n    }\n    // remove old post with same ID and get the remaining data /// filter \n    let filterPost = [...data].filter(OBJ=>OBJ.id!==updateID);\n    // prepare object with edited post + remaining data from object above\n    let posts = [...filterPost, editedPost];\n    // push int state\n    setData(posts);\n\n    setUpdateID();\n    setUpdateName();\n    setUpdatePrice();\n    setUpdateQuantity();\n\n    // update write to json file\n    saveJson(posts);\n\n  }\n\n  // Write to JSON File\n  //////////////////////////////////////////\n  // this function will receive all uodated state / posts after you add, edit delete post\n  const saveJson = (posts) => {\n    // api URL // end point from node server / express server\n    const url = 'http://localhost:5000/write'\n    axios.post(url, posts)\n    .then(response => {\n      // console.log(response);\n    });\n  }\n\n\n\n\n\n  return (\n    <div className=\"App\">\n\n      <div>\n        <h4>Add New Meat</h4>\n        <input placeholder=\"Name\" \n          onChange={ e => setName( e.target.value ) } \n          value={ name || '' } \n          ref={ nameRef }\n        />\n        <br />\n        <input placeholder=\"Price in KSHS\" \n          onChange={ e => setPrice( e.target.value ) } \n          value={ price || '' } \n          ref={ priceRef }\n        />\n        <br />\n        <input placeholder=\"Quantity\" \n          onChange={ e => setQuantity( e.target.value ) } \n          value={ quantity || '' } \n          ref={ quantityRef }\n        />\n        <br />\n        <Button variant=\"primary\"onClick={addPost}>Add Meat</Button>\n      </div>\n\n      {/* If temp state has got values of title and content for update form show this */}\n\n      { updateName || updatePrice || updateQuantity ? \n        (\n          <div>\n            <h4>Update Product</h4>\n            <input placeholder=\"Name\" \n              onChange={ e => setUpdateName( e.target.value ) } \n              value={ updateName || '' } \n            />\n            <br />\n            <input placeholder=\"Price in KSHS\" \n              onChange={ e => setUpdatePrice( e.target.value ) } \n              value={ updatePrice || '' } \n            />\n            <br />\n\n            <input placeholder=\"Quantity\" \n              onChange={ e => setUpdateQuantity( e.target.value ) } \n              value={ updateQuantity || '' } \n            />\n            <br />\n            <Button variant=\"primary\" onClick={ updatePost }>Update Product</Button>\n          </div>\n        ) : null }\n\n      <div className=\"posts\">\n\n      <Container fluid>\n        <Row>\n          <Col md=\"12\">\n            <Card className=\"strpied-tabled-with-hover\">\n              <Card.Header>\n                <Card.Title as=\"h4\">Meat</Card.Title>\n                \n              </Card.Header>\n              <Card.Body className=\"table-full-width table-responsive px-0\">\n                <Table className=\"table-hover table-striped\">\n                  <thead>\n                    <tr>\n                      <th className=\"border-0\">ID</th>\n                      <th className=\"border-0\">Name</th>\n                      <th className=\"border-0\">Price</th>\n                      <th className=\"border-0\">Quantity</th>\n                      <th className=\"border-0\">Edit</th>\n                      <th className=\"border-0\">Delete</th>\n                      \n                    </tr>\n                  </thead>\n            \n        { data ? data.map(posts => {\n          return(\n            <tbody>\n                    <tr>\n                      <td>{posts.id}</td>\n                      <td>{posts.name}</td>\n                      <td>{posts.price}</td>\n                      <td>{posts.quantity}</td>  \n\n                <td> <Button variant=\"primary\" onClick={ () => populatePost(posts.id, posts.name, posts.price,posts.quantity) }>Edit</Button></td>\n                <td> <Button variant=\"danger\"onClick={ () => deletePost(posts.id) }>Delete</Button></td>\n\n\n                    </tr>\n\n                 </tbody>\n\n          )\n        }) : null }\n        </Table>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n\n       \n      </div>\n    </div>\n  );\n}\n\nexport default App;","\nimport Fruits from \"views/fruits.js\";\nimport Vegetables from \"views/vegetables.js\";\nimport Meat from \"views/meat.js\";\n\nconst dashboardRoutes = [\n  {\n    path: \"/fruits\",\n    name: \"Fruits\",\n    component: Fruits,\n    layout: \"/admin\",\n  },\n    {\n    path: \"/vegetables\",\n    name: \"Vegetables\",\n    component: Vegetables,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/meat\",\n    name: \"Meat\",\n    component: Meat,\n    layout: \"/admin\",\n  },\n  \n];\n\nexport default dashboardRoutes;\n","\nimport React, { useState, useEffect, useRef } from 'react';\nimport Data from \"../data.json\";\nimport { v1 as uuidv1 } from 'uuid';\nimport axios from 'axios';\nimport {\n  Badge,\n  Button,\n  Card,\n  Navbar,\n  Nav,\n  Table,\n  Container,\n  Row,\n  Col,\n} from \"react-bootstrap\";\n\nfunction App() {\n\n  // Reference\n  const nameRef = useRef();\n  const priceRef = useRef();\n  const quantityRef = useRef();\n\n  // State \n  const [data, setData] = useState(Data);\n\n  // Temp State\n  const [name, setName] = useState();\n  const [price, setPrice] = useState();\n  const [quantity, setQuantity] = useState();\n\n  const [updateID, setUpdateID] = useState();\n  const [updateName, setUpdateName] = useState();\n  const [updatePrice, setUpdatePrice] = useState();\n  const [updateQuantity, setUpdateQuantity] = useState();\n\n  // Effect\n  //////////////////////////////////////////\n  useEffect(() => {\n    // console.log(data);\n    // setDate(Data)\n    // clear form fields\n    nameRef.current.value = null;\n    priceRef.current.value = null;\n    quantityRef.current.value = null;\n    \n  },[data]);\n  \n\n\n  // Add Post\n  //////////////////////////////////////////\n  const addPost = () => {\n    if(name && price && quantity ) {\n      // create new post object\n      let newPost = {\n        \"id\": uuidv1(),\n        \"name\": name,\n        \"price\": price,\n        \"quantity\":quantity\n      }\n      // merge new post with copy of old state\n      let posts = [...data, newPost];\n      // push new object to state\n      setData(posts);\n      // clear title and content from state\n      setName();\n      setPrice();\n      setQuantity();\n\n      // update write to json file\n      saveJson(posts);\n\n   }\n  }\n  \n\n\n  // Delete Post \n  //////////////////////////////////////////\n  const deletePost = (key) => {\n    // filter out post containing that id\n    let filterOutPost = [...data].filter(OBJ=>OBJ.id!==key);\n    // save the rest in state\n    setData(filterOutPost);\n\n    // update write to json file\n    saveJson(filterOutPost);\n\n  }\n\n  // Populate Post\n  ////////////////////////////////////////// \n  const populatePost = (key, name, price, quantity) => {\n    setUpdateID(key);\n    setUpdateName(name);\n    setUpdatePrice(price);\n      setUpdateQuantity(quantity);\n\n  }\n\n  // Update Post \n  //////////////////////////////////////////\n  const updatePost = () => {\n    // populate post info from temp state and prepare new object for changed post\n    let editedPost = {\n      \"id\": updateID,\n      \"name\": updateName,\n      \"price\": updatePrice,\n      \"quantity\":updateQuantity\n    }\n    // remove old post with same ID and get the remaining data /// filter \n    let filterPost = [...data].filter(OBJ=>OBJ.id!==updateID);\n    // prepare object with edited post + remaining data from object above\n    let posts = [...filterPost, editedPost];\n    // push int state\n    setData(posts);\n\n    setUpdateID();\n    setUpdateName();\n    setUpdatePrice();\n    setUpdateQuantity();\n\n    // update write to json file\n    saveJson(posts);\n\n  }\n\n  // Write to JSON File\n  //////////////////////////////////////////\n  // this function will receive all uodated state / posts after you add, edit delete post\n  const saveJson = (posts) => {\n    // api URL // end point from node server / express server\n    const url = 'http://localhost:5000/write'\n    axios.post(url, posts)\n    .then(response => {\n      // console.log(response);\n    });\n  }\n\n\n\n\n\n  return (\n    <div className=\"App\">\n\n      <div>\n        <h4>Add New Fruit</h4>\n        <input placeholder=\"Name\" \n          onChange={ e => setName( e.target.value ) } \n          value={ name || '' } \n          ref={ nameRef }\n        />\n        <br />\n        <input placeholder=\"Price in KSHS\" \n          onChange={ e => setPrice( e.target.value ) } \n          value={ price || '' } \n          ref={ priceRef }\n        />\n        <br />\n        <input placeholder=\"Quantity\" \n          onChange={ e => setQuantity( e.target.value ) } \n          value={ quantity || '' } \n          ref={ quantityRef }\n        />\n        <br />\n\n        <Button variant=\"primary\"onClick={addPost}>Add Fruit</Button>\n      </div>\n\n      {/* If temp state has got values of title and content for update form show this */}\n\n      { updateName || updatePrice || updateQuantity ? \n        (\n          <div>\n            <h4>Update Post</h4>\n            <input placeholder=\"Name\" \n              onChange={ e => setUpdateName( e.target.value ) } \n              value={ updateName || '' } \n            />\n            <br />\n            <input placeholder=\"Price in KSHS\" \n              onChange={ e => setUpdatePrice( e.target.value ) } \n              value={ updatePrice || '' } \n            />\n            <br />\n\n            <input placeholder=\"Quantity\" \n              onChange={ e => setUpdateQuantity( e.target.value ) } \n              value={ updateQuantity || '' } \n            />\n            <br />\n            <Button variant=\"primary\" onClick={ updatePost }>Update Product</Button>\n          </div>\n        ) : null }\n\n      <div className=\"posts\">\n\n      <Container fluid>\n        <Row>\n          <Col md=\"12\">\n            <Card className=\"strpied-tabled-with-hover\">\n              <Card.Header>\n                <Card.Title as=\"h4\">Fruits</Card.Title>\n                \n              </Card.Header>\n              <Card.Body className=\"table-full-width table-responsive px-0\">\n                <Table className=\"table-hover table-striped\">\n                  <thead>\n                    <tr>\n                      <th className=\"border-0\">ID</th>\n                      <th className=\"border-0\">Name</th>\n                      <th className=\"border-0\">Price</th>\n                      <th className=\"border-0\">Quantity</th>\n                      <th className=\"border-0\">Edit</th>\n                      <th className=\"border-0\">Delete</th>\n                      \n                    </tr>\n                  </thead>\n            \n        { data ? data.map(posts => {\n          return(\n            <tbody>\n                    <tr>\n                      <td>{posts.id}</td>\n                      <td>{posts.name}</td>\n                      <td>{posts.price}</td>\n                      <td>{posts.quantity}</td>       \n\n                       \n                <td> <Button variant=\"primary\" onClick={ () => populatePost(posts.id, posts.name, posts.price,posts.quantity) }>Edit</Button></td>\n                <td> <Button variant=\"danger\"onClick={ () => deletePost(posts.id) }>Delete</Button></td>\n\n                    </tr>\n\n                 </tbody>\n\n          )\n        }) : null }\n        </Table>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n\n       \n      </div>\n    </div>\n  );\n}\n\nexport default App;","\nimport React, { useState, useEffect, useRef } from 'react';\nimport Data from \"../data.json\";\nimport { v1 as uuidv1 } from 'uuid';\nimport axios from 'axios';\nimport {\n  Badge,\n  Button,\n  Card,\n  Navbar,\n  Nav,\n  Table,\n  Container,\n  Row,\n  Col,\n} from \"react-bootstrap\";\n\nfunction App() {\n\n  // Reference\n  const nameRef = useRef();\n  const priceRef = useRef();\n  const quantityRef = useRef();\n\n  // State \n  const [data, setData] = useState(Data);\n\n  // Temp State\n  const [name, setName] = useState();\n  const [price, setPrice] = useState();\n  const [quantity, setQuantity] = useState();\n\n  const [updateID, setUpdateID] = useState();\n  const [updateName, setUpdateName] = useState();\n  const [updatePrice, setUpdatePrice] = useState();\n  const [updateQuantity, setUpdateQuantity] = useState();\n\n  // Effect\n  //////////////////////////////////////////\n  useEffect(() => {\n    // console.log(data);\n    // setDate(Data)\n    // clear form fields\n    nameRef.current.value = null;\n    priceRef.current.value = null;\n    quantityRef.current.value = null;\n    \n  },[data]);\n  \n\n\n  // Add Post\n  //////////////////////////////////////////\n  const addPost = () => {\n    if(name && price && quantity ) {\n      // create new post object\n      let newPost = {\n        \"id\": uuidv1(),\n        \"name\": name,\n        \"price\": price,\n        \"quantity\":quantity\n      }\n      // merge new post with copy of old state\n      let posts = [...data, newPost];\n      // push new object to state\n      setData(posts);\n      // clear title and content from state\n      setName();\n      setPrice();\n      setQuantity();\n\n      // update write to json file\n      saveJson(posts);\n\n   }\n  }\n  \n\n\n  // Delete Post \n  //////////////////////////////////////////\n  const deletePost = (key) => {\n    // filter out post containing that id\n    let filterOutPost = [...data].filter(OBJ=>OBJ.id!==key);\n    // save the rest in state\n    setData(filterOutPost);\n\n    // update write to json file\n    saveJson(filterOutPost);\n\n  }\n\n  // Populate Post\n  ////////////////////////////////////////// \n  const populatePost = (key, name, price, quantity) => {\n    setUpdateID(key);\n    setUpdateName(name);\n    setUpdatePrice(price);\n      setUpdateQuantity(quantity);\n\n  }\n\n  // Update Post \n  //////////////////////////////////////////\n  const updatePost = () => {\n    // populate post info from temp state and prepare new object for changed post\n    let editedPost = {\n      \"id\": updateID,\n      \"name\": updateName,\n      \"price\": updatePrice,\n      \"quantity\":updateQuantity\n    }\n    // remove old post with same ID and get the remaining data /// filter \n    let filterPost = [...data].filter(OBJ=>OBJ.id!==updateID);\n    // prepare object with edited post + remaining data from object above\n    let posts = [...filterPost, editedPost];\n    // push int state\n    setData(posts);\n\n    setUpdateID();\n    setUpdateName();\n    setUpdatePrice();\n    setUpdateQuantity();\n\n    // update write to json file\n    saveJson(posts);\n\n  }\n\n  // Write to JSON File\n  //////////////////////////////////////////\n  // this function will receive all uodated state / posts after you add, edit delete post\n  const saveJson = (posts) => {\n    // api URL // end point from node server / express server\n    const url = 'http://localhost:5000/write'\n    axios.post(url, posts)\n    .then(response => {\n      // console.log(response);\n    });\n  }\n\n\n\n\n\n  return (\n    <div className=\"App\">\n\n      <div>\n        <h4>Add New Vegetable</h4>\n        <input placeholder=\"Name\" \n          onChange={ e => setName( e.target.value ) } \n          value={ name || '' } \n          ref={ nameRef }\n        />\n        <br />\n        <input placeholder=\"Price in KSHS\" \n          onChange={ e => setPrice( e.target.value ) } \n          value={ price || '' } \n          ref={ priceRef }\n        />\n        <br />\n        <input placeholder=\"Quantity\" \n          onChange={ e => setQuantity( e.target.value ) } \n          value={ quantity || '' } \n          ref={ quantityRef }\n        />\n        <br />\n\n        <Button variant=\"primary\"onClick={addPost}>Add Vegetable</Button>\n      </div>\n\n      {/* If temp state has got values of title and content for update form show this */}\n\n      { updateName || updatePrice || updateQuantity ? \n        (\n          <div>\n            <h4>Update Product</h4>\n            <input placeholder=\"Name\" \n              onChange={ e => setUpdateName( e.target.value ) } \n              value={ updateName || '' } \n            />\n            <br />\n            <input placeholder=\"Price in KSHS\" \n              onChange={ e => setUpdatePrice( e.target.value ) } \n              value={ updatePrice || '' } \n            />\n            <br />\n\n            <input placeholder=\"Quantity\" \n              onChange={ e => setUpdateQuantity( e.target.value ) } \n              value={ updateQuantity || '' } \n            />\n            <br />\n            <Button variant=\"primary\" onClick={ updatePost }>Update Product</Button>\n          </div>\n        ) : null }\n\n      <div className=\"posts\">\n\n      <Container fluid>\n        <Row>\n          <Col md=\"12\">\n            <Card className=\"strpied-tabled-with-hover\">\n              <Card.Header>\n                <Card.Title as=\"h4\">Vegetable</Card.Title>\n                \n              </Card.Header>\n              <Card.Body className=\"table-full-width table-responsive px-0\">\n                <Table className=\"table-hover table-striped\">\n                  <thead>\n                    <tr>\n                      <th className=\"border-0\">ID</th>\n                      <th className=\"border-0\">Name</th>\n                      <th className=\"border-0\">Price</th>\n                      <th className=\"border-0\">Quantity</th>\n                      <th className=\"border-0\">Edit</th>\n                      <th className=\"border-0\">Delete</th>\n                      \n                    </tr>\n                  </thead>\n            \n        { data ? data.map(posts => {\n          return(\n            <tbody>\n                    <tr>\n                      <td>{posts.id}</td>\n                      <td>{posts.name}</td>\n                      <td>{posts.price}</td>\n                      <td>{posts.quantity}</td>    \n\n                <td> <Button variant=\"primary\" onClick={ () => populatePost(posts.id, posts.name, posts.price,posts.quantity) }>Edit</Button></td>\n                <td> <Button variant=\"danger\"onClick={ () => deletePost(posts.id) }>Delete</Button></td>\n                    </tr>\n\n                 </tbody>\n\n          )\n        }) : null }\n        </Table>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n\n       \n      </div>\n    </div>\n  );\n}\n\nexport default App;","  \nimport React, { Component } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { Navbar, Container, Nav, Dropdown, Button } from \"react-bootstrap\";\n\nimport routes from \"routes.js\";\n\nfunction Header() {\n  const location = useLocation();\n  const mobileSidebarToggle = (e) => {\n    e.preventDefault();\n    document.documentElement.classList.toggle(\"nav-open\");\n    var node = document.createElement(\"div\");\n    node.id = \"bodyClick\";\n    node.onclick = function () {\n      this.parentElement.removeChild(this);\n      document.documentElement.classList.toggle(\"nav-open\");\n    };\n    document.body.appendChild(node);\n  };\n\n  const getBrandText = () => {\n    for (let i = 0; i < routes.length; i++) {\n      if (location.pathname.indexOf(routes[i].layout + routes[i].path) !== -1) {\n        return routes[i].name;\n      }\n    }\n    return \"Brand\";\n  };\n  return (\n    <Navbar bg=\"light\" expand=\"lg\">\n      <Container fluid>\n        <div className=\"d-flex justify-content-center align-items-center ml-2 ml-lg-0\">\n          <Button\n            variant=\"dark\"\n            className=\"d-lg-none btn-fill d-flex justify-content-center align-items-center rounded-circle p-2\"\n            onClick={mobileSidebarToggle}\n          >\n            <i className=\"fas fa-ellipsis-v\"></i>\n          </Button>\n          <Navbar.Brand\n            href=\"#home\"\n            onClick={(e) => e.preventDefault()}\n            className=\"mr-2\"\n          >\n            {getBrandText()}\n          </Navbar.Brand>\n        </div>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" className=\"mr-2\">\n          <span className=\"navbar-toggler-bar burger-lines\"></span>\n          <span className=\"navbar-toggler-bar burger-lines\"></span>\n          <span className=\"navbar-toggler-bar burger-lines\"></span>\n        </Navbar.Toggle>\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"nav mr-auto\" navbar>\n            <Nav.Item>\n              <Nav.Link\n                data-toggle=\"dropdown\"\n                href=\"#pablo\"\n                onClick={(e) => e.preventDefault()}\n                className=\"m-0\"\n              >\n                \n              </Nav.Link>\n            </Nav.Item>\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n}\n\nexport default Header;\n","\nimport React, { Component } from \"react\";\nimport { Container } from \"react-bootstrap\";\n\nclass Footer extends Component {\n  render() {\n    return (\n      <footer className=\"footer px-0 px-lg-3\">\n        <Container fluid>\n          <nav>\n        \n          </nav>\n        </Container>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","export default __webpack_public_path__ + \"static/media/reactlogo.55f6660b.png\";","\nimport React, { Component } from \"react\";\nimport { useLocation, NavLink } from \"react-router-dom\";\n\nimport { Nav } from \"react-bootstrap\";\n\nimport logo from \"assets/img/reactlogo.png\";\n\nfunction Sidebar({ color, image, routes }) {\n  const location = useLocation();\n  const activeRoute = (routeName) => {\n    return location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  };\n  return (\n    <div className=\"sidebar\" data-image={image} data-color={color}>\n      <div\n        className=\"sidebar-background\"\n        style={{\n          backgroundImage: \"url(\" + image + \")\",\n        }}\n      />\n      <div className=\"sidebar-wrapper\">\n        <div className=\"logo d-flex align-items-center justify-content-start\">\n          <a\n            className=\"simple-text logo-mini mx-1\"\n          >\n            <div className=\"logo-img\">\n\n              <a className=\"simple-text\" >\n               Mama Steve Hotel\n          </a>\n            </div>\n          </a>\n          \n        </div>\n        <Nav>\n          {routes.map((prop, key) => {\n            if (!prop.redirect)\n              return (\n                <li\n                  className={\n                    prop.upgrade\n                      ? \"active active-pro\"\n                      : activeRoute(prop.layout + prop.path)\n                  }\n                  key={key}\n                >\n                  <NavLink\n                    to={prop.layout + prop.path}\n                    className=\"nav-link\"\n                    activeClassName=\"active\"\n                  >\n                    <i className={prop.icon} />\n                    <p>{prop.name}</p>\n                  </NavLink>\n                </li>\n              );\n            return null;\n          })}\n        </Nav>\n      </div>\n    </div>\n  );\n}\n\nexport default Sidebar;\n","export default __webpack_public_path__ + \"static/media/mama-mboga.80e7a129.jpg\";","import React, { Component } from \"react\";\nimport { useLocation, Route, Switch } from \"react-router-dom\";\n\nimport AdminNavbar from \"components/Navbars/AdminNavbar\";\nimport Footer from \"components/Footer/Footer\";\nimport Sidebar from \"components/Sidebar/Sidebar\";\n\nimport routes from \"routes.js\";\n\nimport sidebarImage from \"assets/img/mama-mboga.jpg\";\n\nfunction Admin() {\n  const [image, setImage] = React.useState(sidebarImage);\n  const [color, setColor] = React.useState(\"black\");\n  const [hasImage, setHasImage] = React.useState(true);\n  const location = useLocation();\n  const mainPanel = React.useRef(null);\n  const getRoutes = (routes) => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            render={(props) => <prop.component {...props} />}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  React.useEffect(() => {\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    mainPanel.current.scrollTop = 0;\n    if (\n      window.innerWidth < 993 &&\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\n    ) {\n      document.documentElement.classList.toggle(\"nav-open\");\n      var element = document.getElementById(\"bodyClick\");\n      element.parentNode.removeChild(element);\n    }\n  }, [location]);\n  return (\n    <>\n      <div className=\"wrapper\">\n        <Sidebar color={color} image={hasImage ? image : \"\"} routes={routes} />\n        <div className=\"main-panel\" ref={mainPanel}>\n          <AdminNavbar />\n          <div className=\"content\">\n            <Switch>{getRoutes(routes)}</Switch>\n          </div>\n          <Footer />\n        </div>\n      </div>\n      \n    </>\n  );\n}\n\nexport default Admin;\n","\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./assets/css/animate.min.css\";\nimport \"./assets/scss/light-bootstrap-dashboard-react.scss?v=2.0.0\";\nimport \"./assets/css/demo.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\n\nimport AdminLayout from \"layouts/Admin.js\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <Switch>\n      <Route path=\"/admin\" render={(props) => <AdminLayout {...props} />}/>\n      <Redirect from=\"/\" to=\"/admin/fruits\" />\n    </Switch>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}